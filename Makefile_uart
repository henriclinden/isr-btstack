#
# Build a BLE applications
#
# Henric Lind√©n, rt-labs AB
#

BTSTACK_ROOT = btstack

# Settings
VPATH += ${BTSTACK_ROOT}/src
VPATH += ${BTSTACK_ROOT}/src/ble
VPATH += ${BTSTACK_ROOT}/src/ble/gatt-service
VPATH += ${BTSTACK_ROOT}/platform/posix
VPATH += ${BTSTACK_ROOT}/platform/posix-h4

CFLAGS += -I.
CFLAGS += -I${BTSTACK_ROOT}/src
CFLAGS += -I${BTSTACK_ROOT}/src/ble
CFLAGS += -I${BTSTACK_ROOT}/platform/posix

CFLAGS += -g -Wall -Wmissing-prototypes -Wstrict-prototypes -Wshadow -Werror -Wunused-parameter -Wredundant-decls -Wsign-compare

# Needed files
CORE += \
	btstack_memory.c \
	btstack_linked_list.c \
	btstack_memory_pool.c \
	btstack_run_loop.c \
	btstack_util.c

COMMON += \
	ad_parser.c \
	hci.c \
	hci_cmd.c \
	hci_dump.c \
	l2cap.c \
	l2cap_signaling.c

GATT_CLIENT += \
	gatt_client.c

ATT += \
	att_dispatch.c

SM += \
	sm.c

PLATFORM += \
	btstack_run_loop_posix.c \
	btstack_link_key_db_fs.c \
	btstack_stdin_posix.c \
	le_device_db_fs.c \
	wav_util.c

# UART H4 as transport.
PLATFORM += \
	btstack_uart_block_posix.c \
	hci_transport_h4.c \
	main_uart.c

# Collect all necessary object files
SRCS = $(APP) $(PLATFORM) $(CORE) $(COMMON) $(GATT_CLIENT) $(ATT) $(SM)
OBJS = $(SRCS:.c=.o)

# Applications
BLEAPPS = discover receive
TESTAPPS = test-flood

# Applications to build in the default path
all: $(BLEAPPS) $(TESTAPPS)

# Dependencis BLE apps
$(BLEAPPS): $(OBJS)

# Dependencis TEST apps
$(TESTAPPS):

# Clean up
clean:
	-$(RM) $(OBJS)
	-$(RM) $(APPS)
	-$(RM) -r *.dSYM
